---
deployment_type: openshift-enterprise
openshift_deployment_type: openshift-enterprise
openshift_master_cluster_method: native
openshift_release: v3.11

openshift_master_cluster_public_hostname: console.{{ env_id }}.{{ dns_domain }}
openshift_master_cluster_hostname: api.{{ env_id }}.{{ dns_domain }}
openshift_master_default_subdomain: apps.{{ env_id }}.{{ dns_domain }}


# HTPASSWD Identity Provider
openshift_master_identity_providers:
 - 'name': 'htpasswd_auth'
   'login': 'true'
   'challenge': 'true'
   'kind': 'HTPasswdPasswordIdentityProvider'

#this will create an admin/admin user
openshift_master_htpasswd_users:
  admin: $apr1$7aiANAYb$TOUYVUqnBqBlD5AQEIMYw1

openshift_hosted_router_selector: 'node-role.kubernetes.io/infra=true'
openshift_hosted_manage_router: true
osm_default_node_selector: 'node-role.kubernetes.io/compute=true'
openshift_docker_options: "--log-driver=json-file --log-opt max-size=50m --log-opt max-file=100"

# os_sdn_network_plugin_name: 'redhat/openshift-ovs-networkpolicy'
os_sdn_network_plugin_name: 'redhat/openshift-ovs-multitenant'
os_firewall_use_firewalld: true
osm_cluster_network_cidr: 10.1.0.0/16

# Registry URL & Credentials
# For more info: https://access.redhat.com/terms-based-registry/
oreg_url: 'registry.redhat.io/openshift3/ose-${component}:${version}'
# oreg_auth_user: "{{ lookup('env', 'OREG_AUTH_USER' )}}"
# oreg_auth_password: "{{ lookup('env', 'OREG_AUTH_PASSWORD' )}}"

openshift_hosted_prometheus_deploy: false
openshift_cfme_install_app: false

# Open required ports on IPTables for Prometheus Node Exporters & Router Statistics
openshift_node_open_ports:
  - service: "router stats port"
    port: "1936/tcp"
  - service: "prometheus node exporter"
    port: "9100/tcp"


openshift_node_groups:
- name: node-config-master
  labels:
  - 'node-role.kubernetes.io/master=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
- name: node-config-infra
  labels:
  - 'node-role.kubernetes.io/infra=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
- name: node-config-compute
  labels:
  - 'node-role.kubernetes.io/compute=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
...
