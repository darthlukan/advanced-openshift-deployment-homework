---
# Version vars
openshift_release: v3.11
openshift_image_tag: v3.11.16
openshift_pkg_version: -3.11.16
# Adding this in because of a possible bug in Ansible 2.6+ with openshift-ansible.3.7+
openshift_version: v3.11.16

# Cluster core config
deployment_type: 'openshift-enterprise'
openshift_deployment_type: 'openshift-enterprise'
openshift_master_cluster_method: 'native'

# This is a hack because for whatever the reason we're not getting the response we expect from the registry
# See: https://github.com/openshift/openshift-ansible/issues/7721
# AND
# https://github.com/openshift/openshift-ansible/issues/6002
openshift_disable_check: disk_availability,memory_availability,docker_storage,docker_image_availability

# Examples
openshift_install_examples: true

# NOTE: 'byo' is used here as a placeholder. The installer expects
# one of 'gcp', 'aws', or 'osp' for pre-provisioning. In a BYO
# context we avoid errors due to lack of support by providing a "dummy"
# infra id.
hosting_infrastructure: 'byo'

# Cluster Host Variables. See 'Table 1. Host Variables'
# here: https://docs.openshift.com/enterprise/3.0/install_config/install/advanced_install.html
openshift_master_cluster_public_hostname: console.{{ env_id }}.{{ dns_domain }}
openshift_master_cluster_hostname: api.{{ env_id }}.{{ dns_domain }}
openshift_master_default_subdomain: apps.{{ env_id }}.{{ dns_domain }}

# HTPASSWD Identity Provider
openshift_master_identity_providers:
 - 'name': 'Default Authentication'
   'login': 'true'
   'challenge': 'true'
   'kind': 'HTPasswdPasswordIdentityProvider'
openshift_master_htpasswd_file: '/etc/origin/master/htpasswd'

#this will create an admin/admin user
openshift_master_htpasswd_users:
  admin: $apr1$7aiANAYb$TOUYVUqnBqBlD5AQEIMYw1

# Routing
openshift_hosted_manage_router: true
openshift_hosted_router_selector: 'node-role.kubernetes.io/infra=true'
openshift_router_selector: 'node-role.kubernetes.io/infra=true'
osm_default_node_selector: 'node-role.kubernetes.io/compute=true'
openshift_docker_options: "--log-driver=json-file --log-opt max-size=50m --log-opt max-file=100"

# Storage
# We're using NFS (first pass) so we have to enable unsupported configs
# Our NFS share has 50Gi available, we're going to allocate 10 for the registry
# which gives us enough to toy with different PVs later
#
# TODO: Swap this out for a OCS-3.11 config using Gluster
#
openshift_enable_unsupported_configurations: true
openshift_hosted_registry_storage_kind: nfs
openshift_hosted_registry_storage_host: support1.a935.internal
openshift_hosted_registry_storage_access_modes: ['ReadWriteMany']
openshift_hosted_registry_storage_nfs_directory: /srv/nfs/
openshift_hosted_registry_storage_nfs_options: '*(rw,root_squash,no_wdelay,sync)'
openshift_hosted_registry_storage_volume_name: registry
openshift_hosted_registry_storage_volume_size: 10Gi
openshift_hosted_registry_selector: 'node-role.kubernetes.io/infra=true'

# Networking
os_sdn_network_plugin_name: 'redhat/openshift-ovs-networkpolicy'
os_firewall_use_firewalld: true
osm_cluster_network_cidr: 10.1.0.0/16
openshift_master_console_port: 443
openshift_master_api_port: 443

# Registry URL & Credentials
oreg_url: 'registry.redhat.io/openshift3/ose-${component}:${version}'
oreg_auth_user: "{{ lookup('env', 'OREG_AUTH_USER' )}}"
oreg_auth_password: "{{ lookup('env', 'OREG_AUTH_PASSWORD' )}}"

# Metrics
openshift_hosted_prometheus_deploy: false
openshift_cfme_install_app: false

# Open required ports on IPTables for Prometheus Node Exporters & Router Statistics
openshift_node_open_ports:
  - service: "router stats port"
    port: "1936/tcp"
  - service: "prometheus node exporter"
    port: "9100/tcp"


openshift_node_groups:
- name: node-config-master
  labels:
  - 'node-role.kubernetes.io/master=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
- name: node-config-infra
  labels:
  - 'node-role.kubernetes.io/infra=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
- name: node-config-compute
  labels:
  - 'node-role.kubernetes.io/compute=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
...
